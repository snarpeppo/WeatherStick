from m5stack import *
from m5ui import *
from uiflow import *
import time
import urequests
import wifiCfg
import machine

tempo = 60
def rain():
  global tempo
  i = 0
  while i<tempo:
    rgb.set_screen([0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0xffffff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff])
    wait_ms(60)
    rgb.set_screen([0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0xffffff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff])
    wait_ms(60)
    rgb.set_screen([0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0xffffff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff])
    wait_ms(60)
    rgb.set_screen([0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff])
    wait_ms(60)
    rgb.set_screen([0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff])
    wait_ms(60)
    rgb.set_screen([0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff])
    wait_ms(60)
    rgb.set_screen([0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0x00ffff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff])
    wait_ms(60)
    rgb.set_screen([0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0xffffff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0x0000ff])
    wait_ms(60)
    rgb.set_screen([0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0xffffff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x0000ff])
    wait_ms(60)
    rgb.set_screen([0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0xffffff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff])
    wait_ms(60)
    rgb.set_screen([0x0000ff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0xffffff])
    wait_ms(60)
    rgb.set_screen([0xffffff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x00ffff])
    wait_ms(60)
    rgb.set_screen([0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0xffffff, 0x0000ff, 0x00ffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0xffffff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff])
    wait_ms(60)
    i=i+1

def sun():
  global tempo
  i = 0
  while i<tempo:
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0xff8000, 0, 0, 0, 0xff8000, 0xffff00, 0xff8000, 0, 0, 0, 0xff8000, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(100)
    rgb.set_screen([0, 0, 0xff8000, 0, 0, 0, 0xff8000, 0xff8000, 0xff8000, 0, 0xff8000, 0xff8000, 0xffff00, 0xff8000, 0xff8000, 0, 0xff8000, 0xff8000, 0xff8000, 0, 0, 0, 0xff8000, 0, 0])
    wait_ms(100)
    rgb.set_screen([0xff8000, 0xff8000, 0xff8000, 0xff8000, 0xff8000, 0xff8000, 0xffff00, 0xffff00, 0xffff00, 0xff8000, 0xff8000, 0xffff00, 0xffff00, 0xffff00, 0xff8000, 0xff8000, 0xffff00, 0xffff00, 0xffff00, 0xff8000, 0xff8000, 0xff8000, 0xff8000, 0xff8000, 0xff8000])
    wait_ms(100)
    rgb.set_screen([0, 0, 0xff8000, 0, 0, 0, 0xff8000, 0xff8000, 0xff8000, 0, 0xff8000, 0xff8000, 0xffff00, 0xff8000, 0xff8000, 0, 0xff8000, 0xff8000, 0xff8000, 0, 0, 0, 0xff8000, 0, 0])
    wait_ms(100)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0xff8000, 0, 0, 0, 0xff8000, 0xffff00, 0xff8000, 0, 0, 0, 0xff8000, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(100)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff8000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(100)
    i=i+1

def cloudy():
  global tempo
  i = 0
  while i<tempo:
    rgb.set_screen([0xffffff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff])
    wait_ms(80)
    rgb.set_screen([0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff])
    wait_ms(80)
    rgb.set_screen([0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff])
    wait_ms(80)
    rgb.set_screen([0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0xffffff, 0xffffff])
    wait_ms(80)
    rgb.set_screen([0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff])
    wait_ms(80)
    rgb.set_screen([0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff])
    wait_ms(80)
    rgb.set_screen([0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff])
    wait_ms(80)
    rgb.set_screen([0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff])
    wait_ms(80)
    rgb.set_screen([0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff])
    wait_ms(80)
    rgb.set_screen([0xffffff, 0xffffff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0x0080ff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff, 0x0080ff, 0xffffff, 0xffffff, 0xffffff, 0x0080ff])
    wait_ms(80)
    i=i+1

def lightRain():
  global tempo
  i = 0
  while i < tempo:
    rgb.set_screen([0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0xffffff, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0])
    wait_ms(80)
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    wait_ms(80)
    i=i+1


# add WIFI information inside this try except
try:
  rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0x00ffff, 0, 0, 0, 0x00ffff, 0xffff00, 0x00ffff, 0, 0, 0, 0x00ffff, 0, 0, 0, 0, 0, 0, 0])
  wifiCfg.doConnect('XXXXXXXX', 'YYYYYYYY')
  if wifiCfg.wlan_sta.isconnected():
    rgb.set_screen([0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff])
  else:
    rgb.set_screen([0, 0, 0, 0, 0, 0, 0, 0x00ff00, 0, 0, 0, 0x00ff00, 0xffffff, 0x00ff00, 0, 0, 0, 0x00ff00, 0, 0, 0, 0, 0, 0, 0])
    wifiCfg.doConnect('JJJJJJJJ', 'KKKKKKKKK')
    if wifiCfg.wlan_sta.isconnected():
      rgb.set_screen([0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff])
except:
  rgb.setColor(1, 0xff0000)
starttime = time.time()
while True:
  try:
      # endpoint that provides the weather info
    req = urequests.get('http://mediapedia.altervista.org/api/m5/weather/')
    code = req.text
    if code == '0':
      sun()
    elif code == '1' or '2' or '3':
      cloudy()
    elif code == '61' or '63' or '65':
      lightRain()
    elif code == '80' or '81' or '83':
      rain()
  except:
    rgb.set_screen([0,0,0,0,0,0,0,0,0,0,0,0,0x00ff00,0,0,0,0,0,0,0,0,0,0,0,0])
    machine.reset()
  time.sleep(tempo - ((time.time() - starttime) % tempo))
